
Create a Django Rest Framework Application to expose a few API's and also design and implement supporting database tables.



Requirements:

Expose the following API’s
- Create a Company.
- Create a Team (Should have company ID in path).
- Get Company object from ID.
- Search company by name.
- Get All teams (Return all teams as an array grouped within company object)

All the API’s should be accessible using a JWT token and only super admin is allowed the CRUD operations (use proper permission classes)

Use the following Schema for Database designing
Company
-- UUID (primary Key)
-- Company name
-- Company CEO
-- Company address
-- Inception date
 Team
-- UUID (primary Key)
-- CompanyID (Foreign Key)
-- Team Lead Name

Include a README file properly documented.

Dockerize the Django App and include supporting files.



#
# def compTeams(request):
#     if request.method == "POST":
#         company_name = request.POST.get['company_name']
#         company = Company.objects.get(companyName=company_name)
#
#         teams = company.Teams_set.all()
#         context = {"company": company, 'teams': teams}
#
#         return render(request, "Techwondoe/viewteams.html", context)
#
#
# from collections import defaultdict
#
#
# def allTeams(request):
#     allcompanys = Company.objects.all()
#     companyTeam = defaultdict(list)
#
#     # [(company,team)
#     for company in allcompanys:
#         teams = company.Teams_set.all()
#         companyTeam[company].append(teams)
#
#     context = {"companyTeam": companyTeam}
#     return render(request, "test.html", context)
